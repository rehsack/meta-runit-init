#!/bin/sh

pserviceup() {
	uptime="$2"
	[ -z "$uptime" ] && uptime=4
	depstatus="$(sv s "$1")"
	if echo "$depstatus"| grep '^run:' | grep -q '[0-9][0-9]*s'; then
		rantime="${depstatus##* }"
		rantime="${rantime%%s}"
		if [ "$rantime" -ge "$uptime" ] 2>/dev/null; then
			return 0
		fi
	fi
	return 1
}

servicedown() {
	if sv s "$1" | grep -q '^down:'; then
		return 0
	fi
	return 1
}

prereqok() {
	dosleep=$2
	sleepcmd=""
	[ -z "$dosleep" ] && sleepcmd="sleep 2"
	if ! test -e /run/service-progress/completed-scripts/$1; then
		$sleepcmd
		return 1
	else
		if echo $1 | grep -q '^5-'; then
			if echo $1 | grep -q '^5-initial-syslog' && [ -n "$dosleep" ]; then
				return 0
			fi
			pserviceup $1 || {
				(
					sleep 4 && pserviceup $1 || {
						unmarkcompleted $1
					}
				) &
				$sleepcmd
				return 1
			}
		fi
	fi
	return 0
}

unmarkcompleted() {
	(
		if [ -n "$1" ]; then
			cd /var/service/$1
		fi
		rm -f /run/service-progress/completed-scripts/"$(basename "$(pwd)")"
	)
}

markcompleted() {
	touch /run/service-progress/completed-scripts/"$(basename "$(pwd)")"
}

markran() {
	if [ -d "$(pwd)/log" ]; then
		sv d "$(pwd)/log"
	fi
	markcompleted
	exec sv d "$(basename "$(pwd)")"
}

is_read_only_directory() {
        local testdir="$1"
        local rmode
        local cdir="$(readlink -f $testdir)"
        local odir="first"
        while [ "$odir" != "/" ] && [ -z "$rmode" ]; do
                if [ -L "$cdir" ]; then
                        if [ -d "$(readlink -f "$cdir")" ]; then
                                rmode="$(grep " $cdir " /proc/mounts | cut -f4 -d\  | sed -e 's/^\(\|,\)\(r\(o\|w\)\)\(,.*\|\)$/\2/')"
                        else
                                echo "ERROR: Canonicalization of $testdir ($cdir) is not a directory"
                                return 1
                        fi
                elif [ ! -d "$cdir" ]; then
                        echo "ERROR: Canonicalization of $testdir ($cdir) is not a directory"
                        return 1
                else
                        rmode="$(grep " $cdir " /proc/mounts | cut -f4 -d\  | sed -e 's/^\(\|,\)\(r\(o\|w\)\)\(,.*\|\)$/\2/')"
                fi
                # Move up the tree
                odir="$cdir"
                cdir=`dirname $cdir`
        done
        if [ "$rmode" = "ro" ]; then
                return 0
        else
                return 1
        fi
}
