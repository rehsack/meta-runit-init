#!/bin/sh

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin
export PATH

# Init already switched to multiuser mode
if [ -n "$(ps|grep 'runsvdir'|grep -v grep)" ]; then
	exec telinit "$@"
fi

. /etc/default/rcS
. /etc/init.d/functions-ri

if [ -e /proc ] && [ ! -e /proc/mounts ]; then
	mount -n -t proc proc /proc
fi

if [ -e /run ] && ! grep -q ' /run ' /proc/mounts; then
	if [ ! -L /run ]; then
		mount -o mode=0755,nodev,nosuid,strictatime -t tmpfs tmpfs /run
	else
	mount -o mode=0755,nodev,nosuid,strictatime -t tmpfs tmpfs "$(readlink -f /run)"
	fi
fi

if is_read_only_directory /var/service; then
(
	set -e
	
	umask 022
	rm -rf /run/service-fallback
	mkdir -p /run/service-fallback
	chown root.root /run/service-fallback

	modprobe overlay

	if [ -d /etc/volatiles.orig/var/service ]; then
		mount -o mode=0755 -t tmpfs tmpfs /run/service-fallback 
		mkdir -p /run/service-fallback/upper
		mkdir -p /run/service-fallback/work
		mount overlay -t overlay -olowerdir=/etc/volatiles.orig/var/service,upperdir=/run/service-fallback/upper,workdir=/run/service-fallback/work /var/service
	else
		mount -o mode=0755 -t tmpfs tmpfs /var/service
		cp -a /etc/service/* /var/service/
	fi
) || {
	echo "FATAL: Unable to mount /var/service as writable."
	[ -x "$(which cttyhack)" ] && usecttyhack=cttyhack
	$usecttyhack sulogin $CONSOLE	
}
fi

if [ -z "$(cd /var/service && ls -A)" ] || is_read_only_directory /var/service; then
	echo "FATAL: No runnable runit startup scripts.  Dropping to single user shell."
	[ -x "$(which cttyhack)" ] && usecttyhack=cttyhack
	$usecttyhack sulogin $CONSOLE	
fi

# Execute runsvdir until halt or reboot
[ "$VERBOSE" != "no" ] && {
	echo "Peforming main startup"
	exec runsvdir -s /sbin/initsig /var/service <&- >/dev/console 2>/dev/console
} || {
	exec runsvdir -s /sbin/initsig /var/service <&- >&- 2>&-
}
