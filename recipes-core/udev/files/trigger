#!/bin/sh

export TZ=/etc/localtime

[ -d /sys/class ] || exit 1
[ -r /proc/mounts ] || exit 1
SYSCONF_CACHED="/etc/udev/cache.data"
SYSCONF_TMP="/dev/shm/udev.cache"
DEVCACHE_REGEN="/dev/shm/udev-regen" # create to request cache regen

# A list of files which are used as a criteria to judge whether the udev cache could be reused.
CMP_FILE_LIST="/proc/version /proc/cmdline /proc/devices"
[ -f /proc/atags ] && CMP_FILE_LIST="$CMP_FILE_LIST /proc/atags"

# List of files whose metadata (size/mtime/name) will be included in cached
# system state.
META_FILE_LIST="lib/udev/rules.d/* etc/udev/rules.d/*"

# Command to compute system configuration.
sysconf_cmd () {
	cat -- $CMP_FILE_LIST
	stat -c '%s %Y %n' -- $META_FILE_LIST | awk -F/ '{print $1 " " $NF;}'
}

[ -f /etc/default/udev-cache ] && . /etc/default/udev-cache
[ -f /etc/udev/udev.conf ] && . /etc/udev/udev.conf
[ -f /etc/default/rcS ] && . /etc/default/rcS

kill_udevd () {
    pid=`pidof -x udevd`
    [ -n "$pid" ] && kill $pid
}

if [ "$(basename "${0}")" = "run" ]; then
    . /etc/init.d/functions-ri

    prereqok 5-syslog || exit 1
    prereqok 1-urandom || exit 1
    prereqok 5-udev || exit 1

    export ACTION=add
    # propagate /dev from /sys
    echo "Starting udev triggers"

    # Cache handling.
    if [ "$DEVCACHE" != "" ]; then
            if [ -e $DEVCACHE ]; then
		    sysconf_cmd > "$SYSCONF_TMP"
		    if cmp $SYSCONF_CACHED $SYSCONF_TMP >/dev/null; then
                            tar xmf $DEVCACHE -C / -m
                            not_first_boot=1
		    fi
	    else
		    if [ "$ROOTFS_READ_ONLY" != "yes" ]; then
			    # If rootfs is not read-only, it's possible that a new udev cache would be generated;
			    # otherwise, we do not bother to read files.
			    touch "$DEVCACHE_REGEN"
		    fi
            fi
    fi

    udevadm control --env=STARTUP=1
    if [ "$not_first_boot" != "" ];then
            if [ "$PROBE_PLATFORM_BUS" != "yes" ]; then
                PLATFORM_BUS_NOMATCH="--subsystem-nomatch=platform"
            else
                PLATFORM_BUS_NOMATCH=""
            fi
            udevadm trigger --action=add --subsystem-nomatch=tty --subsystem-nomatch=mem --subsystem-nomatch=vc --subsystem-nomatch=vtconsole --subsystem-nomatch=misc --subsystem-nomatch=dcon --subsystem-nomatch=pci_bus --subsystem-nomatch=graphics --subsystem-nomatch=backlight --subsystem-nomatch=video4linux $PLATFORM_BUS_NOMATCH
            udevadm settle --timeout=3; udevadm control --env=STARTUP=
    else
            udevadm trigger --action=add
            udevadm settle
    fi
fi
if [ "$(basename "${0}")" = "run" ]; then
    markran
fi
exit 0
